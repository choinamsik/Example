package com.example.demo.dao;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

import com.example.demo.controller.UserVO;


@Repository(value = "fileDAO")   /*Repository는 저장소라 이걸 보고 여기서도 저장소라는걸 인식하여 DAO라는걸 알 수 있다 */    
public class UserFileDAO implements UserDAO {

	private static final String filepath = "C:/TEST/users.csv";


	@Override
	public boolean insert(UserVO u) {
	 String line = String.format("%d,%s,%s,%s",
			 u.getNum(),u.getName(),u.getPhone(),u.getEmail());
		try {
			PrintWriter pw = new PrintWriter(new FileWriter(filepath,true));
			pw.println(line);
			pw.close();
			return true;
		} catch(IOException e) {
			e.printStackTrace();
			return false;
		}
	}
	
	
	
	@Override
	public boolean update(UserVO u) {
		try {
			BufferedReader br = new BufferedReader(new FileReader(filepath));
			String line = null;
			ArrayList<String> list = new ArrayList<>();
			while((line=br.readLine())!=null) {
				String[] info = line.split(",");
				int inNum = Integer.parseInt(info[0]);
				if(u.getNum()==inNum) {
					line = String.format("%d,%s,%s,%s,", 
							u.getNum(), info[1],u.getPhone(),info[3]);
				}
				list.add(line);
			}
			br.close();
			PrintWriter pw = new PrintWriter(new FileWriter(filepath));	
			list.forEach(e->pw.println(e));
			
			/* Cunsumer 익명 클래스 정의 >> 지역변수처럼 여기서 한번만 사용 
			 * list.forEach(new Consumer<String>(){
			 *  @override
			 *  public void accept(string s) {
			 *  	pw.println(s);
			 *  }
			 *  });*/
			
			/* 람다식 람다표현식*/		
			/* forEach는 list 안에 있는 item을 하나씩 하나씩 각각 반복해서 e로 주고 e는 pw로 넣어줘서 출력한다.*/
			
			pw.close();
			return true;
		} catch (Exception e){
			e.printStackTrace();
			return false;
		}
	}

	
	
	
	
	
	
	@Override
	public boolean delete(int num) {
		try {
			BufferedReader br = new BufferedReader(new FileReader(filepath));
			String line = null;
			ArrayList<String> list = new ArrayList<>();
			while((line=br.readLine())!=null) {
				String[] info = line.split(",");
				int inNum = Integer.parseInt(info[0]);
				if(num==inNum) continue;/*continue는 여기까지만 돌리고 아래list.add는 실행 하지말라는의미  */
				list.add(line);
			}
			br.close();
			PrintWriter pw = new PrintWriter(new FileWriter(filepath));	
			list.forEach(e->pw.println(e));
			pw.close();
			return true;
		} catch (Exception e){
			e.printStackTrace();
			return false;
		}

	}
	
	
	
	
	
	@Override
	public ArrayList<UserVO> user_list() {
		try {
			ArrayList<UserVO> user_list = new ArrayList<UserVO>();		
			//BufferedReader br = new BufferedReader(new FileReader(filepath));
			BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(filepath),"UTF8"));
			String line = null;
			while ((line = br.readLine()) != null) { // 실행시마다 br.readLine은 한 줄씩 리턴, 줄이 끝나면 =연산자가 실행되지 않으므로 실행결과가 null이 됨
				String[] info = line.split(",");
				int num = Integer.parseInt(info[0]);
				UserVO u = new UserVO();
				u.setNum(num);
				u.setName(info[1]);
				u.setPhone(info[2]);
				u.setEmail(info[3]);
				user_list.add(u);
				//return new UserVO(INum);
			}
			return  user_list;
		}catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}	
	
	
	
	
	
	 
	@Override
	public UserVO getuser (int num) {
			try {
				ArrayList<UserVO> list = new ArrayList<UserVO>();
//				BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(filepath),"UTF8"));			
//				int inum = Integer.parseInt(info[0]);
				for (int i = 0; i < list.size(); i++) {
					if (list.get(i).getNum() == num) {
						return list.get(i);
					}
				}
			}
			catch (Exception e) {
				e.printStackTrace();
			}
			return null;
		}


	
	

	@Override
	public boolean select(int num) {
		
		return false;
	}
	
}
